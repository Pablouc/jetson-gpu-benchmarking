{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo P1\\\\OneDrive\\\\Documentos\\\\TEC\\\\Proyecto de dise\\xF1o\\\\Repo\\\\jetson-gpu-benchmarking\\\\WebApp\\\\gpu-metric-framework\\\\src\\\\components\\\\Request-Execution\\\\Frequency.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Frequency = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [selectedNumber, setSelectedNumber] = useState(null);\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setInputValue(value);\n\n    // Validate the input to ensure it's a number between 800 and 1100\n    if (/^[8-9]\\d{2}$|^10[0-9]{2}$|^1100$/.test(value)) {\n      setSelectedNumber(parseInt(value, 10));\n    } else {\n      setSelectedNumber(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Enter a Number (between 800 and 1100)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      placeholder: \"Enter a number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), selectedNumber !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You entered: \", selectedNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid number between 800 and 1100.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_s(Frequency, \"xIi2V3m7kX2sadVCfEPyrQNuq/o=\");\n_c = Frequency;\nexport default Frequency;\nvar _c;\n$RefreshReg$(_c, \"Frequency\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Frequency","_s","inputValue","setInputValue","selectedNumber","setSelectedNumber","handleInputChange","e","value","target","test","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo P1/OneDrive/Documentos/TEC/Proyecto de diseÃ±o/Repo/jetson-gpu-benchmarking/WebApp/gpu-metric-framework/src/components/Request-Execution/Frequency.js"],"sourcesContent":["\r\nimport React, {useState} from 'react';\r\n\r\nconst Frequency = () => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [selectedNumber, setSelectedNumber] = useState(null);\r\n  \r\n    const handleInputChange = (e) => {\r\n      const value = e.target.value;\r\n      setInputValue(value);\r\n  \r\n      // Validate the input to ensure it's a number between 800 and 1100\r\n      if (/^[8-9]\\d{2}$|^10[0-9]{2}$|^1100$/.test(value)) {\r\n        setSelectedNumber(parseInt(value, 10));\r\n      } else {\r\n        setSelectedNumber(null);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <h5>Enter a Number (between 800 and 1100)</h5>\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter a number\"\r\n        />\r\n        {selectedNumber !== null ? (\r\n          <p>You entered: {selectedNumber}</p>\r\n        ) : (\r\n          <p>Please enter a valid number between 800 and 1100.</p>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Frequency;"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5BL,aAAa,CAACK,KAAK,CAAC;;IAEpB;IACA,IAAI,kCAAkC,CAACE,IAAI,CAACF,KAAK,CAAC,EAAE;MAClDH,iBAAiB,CAACM,QAAQ,CAACH,KAAK,EAAE,EAAE,CAAC,CAAC;IACxC,CAAC,MAAM;MACLH,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9CjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXT,KAAK,EAAEN,UAAW;MAClBgB,QAAQ,EAAEZ,iBAAkB;MAC5Ba,WAAW,EAAC;IAAgB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EACDZ,cAAc,KAAK,IAAI,gBACtBL,OAAA;MAAAa,QAAA,GAAG,eAAa,EAACR,cAAc;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEpCjB,OAAA;MAAAa,QAAA,EAAG;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ,CAAC;AAAAf,EAAA,CAhCKD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}