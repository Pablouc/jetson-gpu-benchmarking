{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo P1\\\\OneDrive\\\\Documentos\\\\TEC\\\\Proyecto de dise\\xF1o\\\\Repo\\\\jetson-gpu-benchmarking\\\\WebApp\\\\gpu-metric-framework\\\\src\\\\components\\\\Dropdown.js\",\n  _s = $RefreshSig$();\nimport './Dropdown.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dropdown() {\n  _s();\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const options = [\"option1\", \"option2\", \"option3\", \"option4\"];\n  const toggleOption = option => {\n    if (selectedOptions.includes(option)) {\n      setSelectedOptions(selectedOptions.filter(item => item !== option));\n    } else {\n      setSelectedOptions([...selectedOptions, option]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        \"aria-labelledby\": \"dropdownMenuButton\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"dropdown-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedOptions.includes(option),\n            onChange: () => toggleOption(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), \" \", option]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected options: \", selectedOptions.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Dropdown, \"S24nRharoliKpDmkOrz7zqRL0rI=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dropdown","_s","selectedOptions","setSelectedOptions","options","toggleOption","option","includes","filter","item","children","Card","className","map","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","join","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo P1/OneDrive/Documentos/TEC/Proyecto de diseÃ±o/Repo/jetson-gpu-benchmarking/WebApp/gpu-metric-framework/src/components/Dropdown.js"],"sourcesContent":["import './Dropdown.css';\r\nimport React, { useState } from 'react';\r\n\r\nfunction Dropdown() {\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const options = [\"option1\", \"option2\", \"option3\", \"option4\"];\r\n\r\n  const toggleOption = (option) => {\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"dropdown\">\r\n        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          {options.map((option) => (\r\n            <label className=\"dropdown-item\" key={option}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedOptions.includes(option)}\r\n                onChange={() => toggleOption(option)}\r\n              />{\" \"}\r\n              {option}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      </Card>\r\n      <p>Selected options: {selectedOptions.join(', ')}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMO,OAAO,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAE5D,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC/B,IAAIJ,eAAe,CAACK,QAAQ,CAACD,MAAM,CAAC,EAAE;MACpCH,kBAAkB,CAACD,eAAe,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKH,MAAM,CAAC,CAAC;IACvE,CAAC,MAAM;MACLH,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEI,MAAM,CAAC,CAAC;IAClD;EACF,CAAC;EAED,oBACEP,OAAA;IAAAW,QAAA,gBACEX,OAAA,CAACY,IAAI;MAACC,SAAS,EAAC,UAAU;MAAAF,QAAA,eACxBX,OAAA;QAAKa,SAAS,EAAC,eAAe;QAAC,mBAAgB,oBAAoB;QAAAF,QAAA,EAChEN,OAAO,CAACS,GAAG,CAAEP,MAAM,iBAClBP,OAAA;UAAOa,SAAS,EAAC,eAAe;UAAAF,QAAA,gBAC9BX,OAAA;YACEe,IAAI,EAAC,UAAU;YACfC,OAAO,EAAEb,eAAe,CAACK,QAAQ,CAACD,MAAM,CAAE;YAC1CU,QAAQ,EAAEA,CAAA,KAAMX,YAAY,CAACC,MAAM;UAAE;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,EAAC,GAAG,EACLd,MAAM;QAAA,GAN6BA,MAAM;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOrC,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACPrB,OAAA;MAAAW,QAAA,GAAG,oBAAkB,EAACR,eAAe,CAACmB,IAAI,CAAC,IAAI,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACnB,EAAA,CA/BQD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAiCjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}