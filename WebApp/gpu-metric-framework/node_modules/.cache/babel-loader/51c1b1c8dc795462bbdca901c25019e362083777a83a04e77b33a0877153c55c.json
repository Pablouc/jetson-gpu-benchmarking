{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo P1\\\\OneDrive\\\\Documentos\\\\TEC\\\\Proyecto de dise\\xF1o\\\\Repo\\\\jetson-gpu-benchmarking\\\\WebApp\\\\gpu-metric-framework\\\\src\\\\components\\\\Request-Execution\\\\Frequency.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Frequency = () => {\n  _s();\n  const [selectedNumber, setSelectedNumber] = useState(800);\n  const handleInputChange = e => {\n    const value = parseInt(e.target.value, 10);\n    if (!isNaN(value) && value >= 800 && value <= 1100) {\n      setSelectedNumber(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a Number (between 800 and 1100)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: selectedNumber,\n      onChange: handleInputChange,\n      min: 800,\n      max: 1100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), selectedNumber >= 800 && selectedNumber <= 1100 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You selected: \", selectedNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), selectedNumber < 800 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a number greater than or equal to 800.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 34\n    }, this), selectedNumber > 1100 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a number less than or equal to 1100.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n};\n_s(Frequency, \"punmFTlQB13IQTofOYnquVHxbNk=\");\n_c = Frequency;\nexport default Frequency;\nvar _c;\n$RefreshReg$(_c, \"Frequency\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Frequency","_s","selectedNumber","setSelectedNumber","handleInputChange","e","value","parseInt","target","isNaN","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","max","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo P1/OneDrive/Documentos/TEC/Proyecto de diseÃ±o/Repo/jetson-gpu-benchmarking/WebApp/gpu-metric-framework/src/components/Request-Execution/Frequency.js"],"sourcesContent":["\r\nimport React, {useState} from 'react';\r\n\r\nconst Frequency = () => {\r\n    const [selectedNumber, setSelectedNumber] = useState(800);\r\n\r\n    const handleInputChange = (e) => {\r\n      const value = parseInt(e.target.value, 10);\r\n      \r\n      if (!isNaN(value) && value >= 800 && value <= 1100) {\r\n        setSelectedNumber(value);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <h2>Select a Number (between 800 and 1100)</h2>\r\n        <input\r\n          type=\"number\"\r\n          value={selectedNumber}\r\n          onChange={handleInputChange}\r\n          min={800}\r\n          max={1100}\r\n        />\r\n        {selectedNumber >= 800 && selectedNumber <= 1100 && (\r\n          <p>You selected: {selectedNumber}</p>\r\n        )}\r\n        {selectedNumber < 800 && <p>Please enter a number greater than or equal to 800.</p>}\r\n        {selectedNumber > 1100 && <p>Please enter a number less than or equal to 1100.</p>}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Frequency;"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,GAAG,CAAC;EAEzD,MAAMO,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,KAAK,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACF,KAAK,EAAE,EAAE,CAAC;IAE1C,IAAI,CAACG,KAAK,CAACH,KAAK,CAAC,IAAIA,KAAK,IAAI,GAAG,IAAIA,KAAK,IAAI,IAAI,EAAE;MAClDH,iBAAiB,CAACG,KAAK,CAAC;IAC1B;EACF,CAAC;EAED,oBACEP,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/Cf,OAAA;MACEgB,IAAI,EAAC,QAAQ;MACbT,KAAK,EAAEJ,cAAe;MACtBc,QAAQ,EAAEZ,iBAAkB;MAC5Ba,GAAG,EAAE,GAAI;MACTC,GAAG,EAAE;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,EACDZ,cAAc,IAAI,GAAG,IAAIA,cAAc,IAAI,IAAI,iBAC9CH,OAAA;MAAAW,QAAA,GAAG,gBAAc,EAACR,cAAc;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACrC,EACAZ,cAAc,GAAG,GAAG,iBAAIH,OAAA;MAAAW,QAAA,EAAG;IAAmD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAClFZ,cAAc,GAAG,IAAI,iBAAIH,OAAA;MAAAW,QAAA,EAAG;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/E,CAAC;AAEZ,CAAC;AAAAb,EAAA,CA5BKD,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}