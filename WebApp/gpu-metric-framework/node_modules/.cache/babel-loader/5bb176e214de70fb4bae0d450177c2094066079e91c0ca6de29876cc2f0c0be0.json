{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo P1\\\\OneDrive\\\\Documentos\\\\TEC\\\\Proyecto de dise\\xF1o\\\\Repo\\\\jetson-gpu-benchmarking\\\\WebApp\\\\gpu-metric-framework\\\\src\\\\components\\\\Request-Execution\\\\Frequency.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Frequency = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = e => {\n    let value = e.target.value;\n\n    // Ensure the input is within the range 800 to 1100\n    if (value === '') {\n      // Allow empty input\n      setInputValue(value);\n    } else {\n      value = parseInt(value, 10);\n      if (!isNaN(value) && value >= 800 && value <= 1100) {\n        setInputValue(value.toString());\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter a Number (between 800 and 1100)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      placeholder: \"Enter a number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n_s(Frequency, \"SORcW8kVWUa8fZ+un8oXhp/OLnk=\");\n_c = Frequency;\nexport default Frequency;\nvar _c;\n$RefreshReg$(_c, \"Frequency\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Frequency","_s","inputValue","setInputValue","handleInputChange","e","value","target","parseInt","isNaN","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo P1/OneDrive/Documentos/TEC/Proyecto de diseÃ±o/Repo/jetson-gpu-benchmarking/WebApp/gpu-metric-framework/src/components/Request-Execution/Frequency.js"],"sourcesContent":["\r\nimport React, {useState} from 'react';\r\n\r\nconst Frequency = () => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n      let value = e.target.value;\r\n  \r\n      // Ensure the input is within the range 800 to 1100\r\n      if (value === '') {\r\n        // Allow empty input\r\n        setInputValue(value);\r\n      } else {\r\n        value = parseInt(value, 10);\r\n        if (!isNaN(value) && value >= 800 && value <= 1100) {\r\n          setInputValue(value.toString());\r\n        }\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <h2>Enter a Number (between 800 and 1100)</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter a number\"\r\n        />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Frequency;"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMO,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,IAAIC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;;IAE1B;IACA,IAAIA,KAAK,KAAK,EAAE,EAAE;MAChB;MACAH,aAAa,CAACG,KAAK,CAAC;IACtB,CAAC,MAAM;MACLA,KAAK,GAAGE,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAC;MAC3B,IAAI,CAACG,KAAK,CAACH,KAAK,CAAC,IAAIA,KAAK,IAAI,GAAG,IAAIA,KAAK,IAAI,IAAI,EAAE;QAClDH,aAAa,CAACG,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC;MACjC;IACF;EACF,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9ChB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXV,KAAK,EAAEJ,UAAW;MAClBe,QAAQ,EAAEb,iBAAkB;MAC5Bc,WAAW,EAAC;IAAgB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEZ,CAAC;AAAAd,EAAA,CA7BKD,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}