{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo P1\\\\OneDrive\\\\Documentos\\\\TEC\\\\Proyecto de dise\\xF1o\\\\Repo\\\\jetson-gpu-benchmarking\\\\WebApp\\\\gpu-metric-framework\\\\src\\\\components\\\\Dropdown.js\",\n  _s = $RefreshSig$();\nimport './Dropdown.css';\n/* import React, { useState } from 'react';\r\n\r\n\r\nfunction Dropdown(props){\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    \r\n    const handleSelectChange = (e) => {\r\n        const selectedValues = Array.from(e.target.selectedOptions, (option) => option.value);\r\n        setSelectedOptions(selectedValues);\r\n      };\r\n    \r\n    return(\r\n        <div>\r\n            <select className='select' multiple onChange={handleSelectChange} value={selectedOptions}>\r\n                <option value=\"App1\">App1</option>\r\n                <option value=\"App2\">App2</option>\r\n                <option value=\"App3\">App3</option>\r\n            </select>\r\n            <p>Selected options: {selectedOptions.join(', ')}</p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Dropdown; */\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dropdown() {\n  _s();\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const options = [\"option1\", \"option2\", \"option3\", \"option4\"];\n  const toggleOption = option => {\n    if (selectedOptions.includes(option)) {\n      setSelectedOptions(selectedOptions.filter(item => item !== option));\n    } else {\n      setSelectedOptions([...selectedOptions, option]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown-toggle\",\n        type: \"button\",\n        id: \"dropdownMenuButton\",\n        \"data-toggle\": \"dropdown\",\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"false\",\n        children: \"Select Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        \"aria-labelledby\": \"dropdownMenuButton\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"dropdown-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedOptions.includes(option),\n            onChange: () => toggleOption(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), \" \", option]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected options: \", selectedOptions.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Dropdown, \"S24nRharoliKpDmkOrz7zqRL0rI=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dropdown","_s","selectedOptions","setSelectedOptions","options","toggleOption","option","includes","filter","item","children","className","type","id","fileName","_jsxFileName","lineNumber","columnNumber","map","checked","onChange","join","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo P1/OneDrive/Documentos/TEC/Proyecto de diseÃ±o/Repo/jetson-gpu-benchmarking/WebApp/gpu-metric-framework/src/components/Dropdown.js"],"sourcesContent":["import './Dropdown.css';\r\n/* import React, { useState } from 'react';\r\n\r\n\r\nfunction Dropdown(props){\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    \r\n    const handleSelectChange = (e) => {\r\n        const selectedValues = Array.from(e.target.selectedOptions, (option) => option.value);\r\n        setSelectedOptions(selectedValues);\r\n      };\r\n    \r\n    return(\r\n        <div>\r\n            <select className='select' multiple onChange={handleSelectChange} value={selectedOptions}>\r\n                <option value=\"App1\">App1</option>\r\n                <option value=\"App2\">App2</option>\r\n                <option value=\"App3\">App3</option>\r\n            </select>\r\n            <p>Selected options: {selectedOptions.join(', ')}</p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Dropdown; */\r\n\r\nimport React, { useState } from 'react';\r\n\r\nfunction Dropdown() {\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const options = [\"option1\", \"option2\", \"option3\", \"option4\"];\r\n\r\n  const toggleOption = (option) => {\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"dropdown\">\r\n        <button className=\"dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Select Options\r\n        </button>\r\n        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          {options.map((option) => (\r\n            <label className=\"dropdown-item\" key={option}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedOptions.includes(option)}\r\n                onChange={() => toggleOption(option)}\r\n              />{\" \"}\r\n              {option}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <p>Selected options: {selectedOptions.join(', ')}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMO,OAAO,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAE5D,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC/B,IAAIJ,eAAe,CAACK,QAAQ,CAACD,MAAM,CAAC,EAAE;MACpCH,kBAAkB,CAACD,eAAe,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKH,MAAM,CAAC,CAAC;IACvE,CAAC,MAAM;MACLH,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEI,MAAM,CAAC,CAAC;IAClD;EACF,CAAC;EAED,oBACEP,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAKY,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACvBX,OAAA;QAAQY,SAAS,EAAC,iBAAiB;QAACC,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAC,oBAAoB;QAAC,eAAY,UAAU;QAAC,iBAAc,MAAM;QAAC,iBAAc,OAAO;QAAAH,QAAA,EAAC;MAE5I;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTlB,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAC,mBAAgB,oBAAoB;QAAAD,QAAA,EAChEN,OAAO,CAACc,GAAG,CAAEZ,MAAM,iBAClBP,OAAA;UAAOY,SAAS,EAAC,eAAe;UAAAD,QAAA,gBAC9BX,OAAA;YACEa,IAAI,EAAC,UAAU;YACfO,OAAO,EAAEjB,eAAe,CAACK,QAAQ,CAACD,MAAM,CAAE;YAC1Cc,QAAQ,EAAEA,CAAA,KAAMf,YAAY,CAACC,MAAM;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,EAAC,GAAG,EACLX,MAAM;QAAA,GAN6BA,MAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOrC,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNlB,OAAA;MAAAW,QAAA,GAAG,oBAAkB,EAACR,eAAe,CAACmB,IAAI,CAAC,IAAI,CAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAAChB,EAAA,CAlCQD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}