[{"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\index.js":"1","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\App.js":"2","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\Card.js":"3","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\ExecutionView.js":"4","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\Navbar.js":"5","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\StaticCheckbox.js":"6","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\DynamicCheckbox.js":"7","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\Dropdown.js":"8","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\TextInput.js":"9","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Apps\\AppComponent.js":"10","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\index.js":"11","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\App.js":"12","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\ExecutionView.js":"13","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\Navbar.js":"14","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\DynamicCheckbox.js":"15","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\StaticCheckbox.js":"16","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\TextInput.js":"17","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\Card.js":"18","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\Dropdown.js":"19","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Apps\\AppComponent.js":"20","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\PopUp.js":"21","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\MainView\\MainView.js":"22","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Monitoring\\MonitoringView.js":"23","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Monitoring\\MyChart.js":"24","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Monitoring\\ExecutionTime.js":"25"},{"size":216,"mtime":1695751156443,"results":"26","hashOfConfig":"27"},{"size":733,"mtime":1698272315918,"results":"28","hashOfConfig":"27"},{"size":187,"mtime":1695751156438,"results":"29","hashOfConfig":"27"},{"size":4385,"mtime":1698269703543,"results":"30","hashOfConfig":"27"},{"size":264,"mtime":1698200175697,"results":"31","hashOfConfig":"27"},{"size":1621,"mtime":1695794812252,"results":"32","hashOfConfig":"27"},{"size":2873,"mtime":1698217616423,"results":"33","hashOfConfig":"27"},{"size":2840,"mtime":1698272621129,"results":"34","hashOfConfig":"27"},{"size":1569,"mtime":1698217997513,"results":"35","hashOfConfig":"27"},{"size":7101,"mtime":1698217720803,"results":"36","hashOfConfig":"27"},{"size":216,"mtime":1698357842807,"results":"37","hashOfConfig":"38"},{"size":1146,"mtime":1699722028189,"results":"39","hashOfConfig":"38"},{"size":5931,"mtime":1699741599805,"results":"40","hashOfConfig":"38"},{"size":264,"mtime":1698357842807,"results":"41","hashOfConfig":"38"},{"size":2967,"mtime":1698359107714,"results":"42","hashOfConfig":"38"},{"size":1735,"mtime":1698359093396,"results":"43","hashOfConfig":"38"},{"size":1569,"mtime":1698357842805,"results":"44","hashOfConfig":"38"},{"size":187,"mtime":1698357842805,"results":"45","hashOfConfig":"38"},{"size":2969,"mtime":1698359078447,"results":"46","hashOfConfig":"38"},{"size":9616,"mtime":1699322607356,"results":"47","hashOfConfig":"38"},{"size":540,"mtime":1698369854213,"results":"48","hashOfConfig":"38"},{"size":2130,"mtime":1699741563269,"results":"49","hashOfConfig":"38"},{"size":9977,"mtime":1699745255639,"results":"50","hashOfConfig":"38"},{"size":3605,"mtime":1699722556288,"results":"51","hashOfConfig":"38"},{"size":1838,"mtime":1699145122123,"results":"52","hashOfConfig":"38"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f1td20",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"1fadv2y",{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"91"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"91"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\index.js",[],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\App.js",[],[],["137"],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\Card.js",[],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\ExecutionView.js",["138","139","140","141","142"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\Navbar.js",[],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\StaticCheckbox.js",["143"],[],"import './StaticCheckbox.css';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nconst StaticCheckbox = (props) =>{\r\n\r\n    const [executionFlag, setExecutionFlag] = useState(false);\r\n\r\n    const handleCheckboxChange = (event) =>{\r\n        const id = event.target.id;\r\n\r\n        // If the clicked checkbox is already checked, uncheck it\r\n        if (id === executionFlag) {\r\n        setExecutionFlag(null);\r\n        } else {\r\n        setExecutionFlag(id); // Otherwise, check the clicked checkbox\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // This code will run after the state has been updated\r\n        const executionType={ \r\n          execType: executionFlag\r\n        };\r\n        props.onExecuteEvent(executionType);  \r\n        }, [executionFlag]);\r\n\r\n    return(\r\n        <div>\r\n            <div className='checkbox-margin'>\r\n                <label  className='form-control'>\r\n                    <input\r\n                        id='simult'\r\n                        type='checkbox'\r\n                        checked= {executionFlag === 'simult'}\r\n                        onChange={handleCheckboxChange}\r\n                    />Simultaneous\r\n                </label> \r\n                <label className='form-control'>\r\n                    <input\r\n                        id='not-simult'\r\n                        type='checkbox'\r\n                        checked={executionFlag === 'not-simult'}\r\n                        onChange={handleCheckboxChange}\r\n                    />Not Simultaneous\r\n                </label> \r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default StaticCheckbox;","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\DynamicCheckbox.js",["144","145"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\Dropdown.js",["146","147","148","149","150","151"],[],"import React, { useState, useEffect } from 'react';\r\n\r\nimport './Dropdown.css';\r\n\r\nconst Dropdown = (props) => {\r\n\r\n    const [selectedNumber, setSelectedNumber] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [frequenciesOptions, setFrequenciesOptions] = useState('');\r\n    const [selectedFrequency, setSelectedFrequency] = useState('');\r\n\r\n    const handleSelectChange = (e) => {\r\n      setSelectedNumber(e.target.value);\r\n    };\r\n  \r\n    const numbers = Array.from({ length: 15 }, (_, i) => i + 1);\r\n\r\n\r\n    useEffect(() => {\r\n      if (props.injected === true) {\r\n        setError(null);\r\n        fetch(props.frequenciesURL, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'ngrok-skip-browser-warning': '1',\r\n          },\r\n        })\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            setFrequenciesOptions(data);\r\n          })\r\n          .catch((error) => {\r\n            setError(error.message);\r\n          });\r\n      }\r\n    }, [props.injected, props.frequenciesURL, props.frequenciesOptions]);\r\n\r\n    \r\n    useEffect(() => {\r\n      // This code will run after the state has been updated\r\n      if(props.injected== false){\r\n        const execNum={ \r\n          execNum: selectedNumber\r\n        };\r\n        props.onExecuteEvent(execNum); \r\n      }\r\n      \r\n      if(props.injected== true){\r\n        const freq={ \r\n          freq:selectedFrequency\r\n        };\r\n        props.onExecuteEvent(freq); \r\n      }\r\n\r\n      }, [selectedFrequency,selectedNumber]);\r\n\r\n  \r\n    return (\r\n      <div>\r\n        {(props.injected == false) && (\r\n          <div>\r\n          <select className='select' onChange={handleSelectChange} value={selectedNumber}>\r\n            <option value=\"\">Select a number</option>\r\n            {numbers.map((number) => (\r\n              <option key={number} value={number}>\r\n                {number}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          </div>\r\n        )}\r\n\r\n        {(props.injected == true) && frequenciesOptions && (          \r\n            <div>\r\n            <select\r\n              className=\"select\"\r\n              onChange={(e) => setSelectedFrequency(e.target.value)}\r\n              value={selectedFrequency}\r\n            >\r\n              <option value=\"\">Select a frequency</option>\r\n              {frequenciesOptions.map((frequency) => (\r\n                <option key={frequency} value={frequency}>\r\n                  {frequency}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n        \r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dropdown;","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\TextInput.js",["152","153","154","155","156"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Apps\\AppComponent.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172"],[],"import React, { useState, useEffect  } from 'react';\r\nimport DynamicCheckbox from '../Request-Execution/DynamicCheckbox';\r\nimport './AppComponents.css';\r\n\r\nconst AppComponent = (props) => {\r\n  \r\n    const workloads = 'workloads';\r\n    let userData={}\r\n\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    //Constants to save inputs values\r\n    const [cfd_threads, set_cfd_Threads] = useState('');\r\n    const [niter, setNiter] = useState('');\r\n    const [lambda, setLambda] = useState('');\r\n    const [nc, setNc] = useState('');\r\n    const [nr, setNr] = useState('');\r\n    const [width, setWidth] = useState('');\r\n    const [height, setHeight] = useState('');\r\n    const [nfr, setNfr] = useState('');\r\n    const [np, setNp] = useState('');\r\n    const [matrixSize, setMatrixSize] = useState('');\r\n    const [lud_threads, set_lud_threads] = useState('');\r\n    const [boxes, setBoxes] = useState('');\r\n\r\n    const executeHandler = ( enteredUserData ) => {\r\n        userData = {\r\n            ...userData, // Keep the existing data in userData\r\n            ...enteredUserData, // Add the data from enteredUserData\r\n        };\r\n        if (props.appName == 'CFD'){\r\n            const cfdApp={\r\n                cfd_workloads : userData.cfd_workload\r\n            }\r\n            props.onExecuteEvent(cfdApp);\r\n        }\r\n        else if (props.appName == 'BFS'){\r\n            const bfs = {\r\n                bfs_name:'BFS',\r\n                bfs_workloads : userData.bfs_workload\r\n            }\r\n            props.onExecuteEvent(bfs);\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        props.updateData(event.target.value);\r\n    }\r\n\r\n    const handleCheckboxChange = () => {\r\n        setIsChecked(prevState => !prevState); // Invierte el valor de isChecked\r\n    };\r\n\r\n    //Sending data the the parent\r\n    useEffect(() => {\r\n    // This code will run after the state has been updated\r\n\r\n\r\n    if(props.appName=='CFD'){\r\n        const cfd={ \r\n        cfd_name: 'CFD',\r\n        cfd_threads: cfd_threads\r\n        };\r\n        props.onExecuteEvent(cfd); \r\n    }\r\n\r\n    else if(props.appName=='LavaMD'){\r\n        const lavaMD={ \r\n        lava_name: 'LavaMD',\r\n        lava_workloads:' -boxes1d '+ boxes\r\n        };\r\n        props.onExecuteEvent(lavaMD); \r\n    }\r\n\r\n    else if(props.appName=='Particle Filter'){\r\n        const particle={ \r\n        filter_name: 'Particle Filter',\r\n        filter_workloads: ' -x ' + width + ' -y ' + height + ' -z ' + nfr + ' -np ' + np\r\n        };\r\n        props.onExecuteEvent(particle); \r\n    }\r\n\r\n    else if(props.appName=='Srad'){\r\n        const srad={ \r\n        srad_name: 'Srad',\r\n        srad_workloads: String(niter) + ' ' + String(lambda) + ' ' +  String(nr)+ ' ' + String(nc)\r\n        };\r\n        props.onExecuteEvent(srad); \r\n    }\r\n\r\n    else if(props.appName=='Lud'){\r\n        const lud={ \r\n        lud_name: 'Lud',\r\n        lud_workloads: ' -s ' + matrixSize ,\r\n        lud_threads: lud_threads\r\n        };\r\n        props.onExecuteEvent(lud); \r\n    } \r\n    }, [userData, cfd_threads, niter, lambda, nc, nr, width, height, nfr, np, matrixSize, lud_threads, boxes]);\r\n    \r\n\r\n\r\n  return (\r\n    <div className='app-style'>\r\n        <label>\r\n      <input type=\"checkbox\" onChange={handleCheckboxChange}/>{props.appName}\r\n      </label>\r\n      <div className='text-style'>\r\n        \r\n        { isChecked && (props.appName == 'BFS') && (\r\n            <>\r\n            <label>Workloads files:</label>\r\n            <DynamicCheckbox itemsURL={props.itemsURL} appName={'BFS'} onExecuteEvent = {executeHandler}/>\r\n            </>\r\n        )}\r\n\r\n        { isChecked && (props.appName == 'CFD') && (\r\n        <>\r\n            <label>Workloads files:</label>\r\n            <DynamicCheckbox itemsURL={props.itemsURL} appName={'CFD'} onExecuteEvent = {executeHandler}/>\r\n            <div >\r\n                <label>Threads per block</label>\r\n                <input type='number' className='input-style' value={cfd_threads} onChange={e => set_cfd_Threads(e.target.value)}></input>\r\n            </div>\r\n        </>\r\n        )}\r\n\r\n        {isChecked && (props.appName == 'LavaMD') && (\r\n        <>\r\n            <div>\r\n                <label>Number of boxes</label>\r\n                <input type='number' className='input-style' value={boxes} onChange={e => setBoxes(e.target.value)}></input>\r\n            </div>\r\n        </>\r\n        )}\r\n\r\n        {isChecked && (props.appName == 'Particle Filter') && (\r\n            <>\r\n                <div>\r\n                    <label>Width</label>\r\n                    <input type='number' className='input-style' value={width} onChange={e => setWidth(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Height</label>\r\n                    <input type='number' className='input-style' value={height} onChange={e => setHeight(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Number of frames</label>\r\n                    <input type='number' className='input-style' value={nfr} onChange={e => setNfr(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Number of particles</label>\r\n                    <input type='number' className='input-style' value={np} onChange={e => setNp(e.target.value)}></input>\r\n                </div>\r\n            </>\r\n        )}\r\n\r\n        {isChecked && (props.appName == 'Srad') && (\r\n            <>\r\n                <div>\r\n                    <label>Algorithm iterations in the image</label>\r\n                    <input type='number' className='input-style' value={niter} onChange={e => setNiter(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Amount of diffusion</label>\r\n                    <input type='number' step=\"0.01\" className='input-style' value={lambda} onChange={e => setLambda(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Number of rows</label>\r\n                    <input type='number' className='input-style' value={nr} onChange={e => setNr(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Number of columns</label>\r\n                    <input type='number' className='input-style' value={nc} onChange={e => setNc(e.target.value)}></input>\r\n                </div>\r\n            </>\r\n        )}\r\n\r\n\r\n        {isChecked && (props.appName == 'Lud') && (\r\n            <>\r\n                <div>\r\n                    <label>Matrix size</label>\r\n                    <input type='number' className='input-style' value={matrixSize} onChange={e => setMatrixSize(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Threads per block</label>\r\n                    <input type='number' className='input-style' value={lud_threads} onChange={e => set_lud_threads(e.target.value)}></input>\r\n                </div>\r\n            </>\r\n        )}\r\n      </div>\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppComponent;\r\n",["173"],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\index.js",[],[],["174"],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\App.js",[],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\ExecutionView.js",["175"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\Navbar.js",[],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\DynamicCheckbox.js",["176","177","178"],[],"import './DynamicCheckbox.css';\r\nimport React, { useState, useEffect  } from 'react';\r\nimport Card from '../UI/Card';\r\n\r\nfunction DynamicCheckbox(props) {\r\n\r\n  const [selectedOption, setSelectedOption] = useState([]);\r\n  const [appsOptions, setAppsOptions] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  //Function to fetch data from the api\r\n  //The item will depend on the props, it could be for the workloads or the apps data.\r\n  useEffect(() => {\r\n    setError(null);\r\n    fetch(props.itemsURL ,{\r\n      method: 'GET',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          'ngrok-skip-browser-warning': '1'\r\n      }\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      setAppsOptions(data.itemNames);\r\n    })\r\n    .catch((error) => {\r\n      setError(error.message);\r\n    });\r\n  }, []);\r\n  \r\n\r\n  //This function retrieves the data to the parent(ExecutionView) throught the function props.onExecuteEvent\r\n  //This function gets triggered every time after the page renders\r\n  useEffect(() => {\r\n    // This code will run after the render\r\n\r\n    if(props.refresh == true){\r\n      setSelectedOption(null);\r\n    }\r\n    \r\n    if (props.appName === 'BFS' && selectedOption !== null) {\r\n      const bfs_workload = {\r\n        bfs_workload: selectedOption\r\n      };\r\n      props.onExecuteEvent(bfs_workload);\r\n    } else if (props.appName === 'CFD' && selectedOption !== null) {\r\n      const cfd_workload = {\r\n        cfd_workload: selectedOption\r\n      };\r\n      props.onExecuteEvent(cfd_workload);\r\n    }\r\n  }, [props.refresh ,selectedOption]);\r\n\r\n    \r\n  // Function to update the selected option\r\n  const toggleOption = (option) => {\r\n    if (selectedOption === option) {\r\n      // Deselect the option if it's already selected\r\n      setSelectedOption(null);\r\n    } else {\r\n      // Select the new option\r\n      setSelectedOption(option);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"dropdown\">\r\n        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          {/* This validation -> appsOptions && is used to make sure that the map is executed util the variable appsOptions has been fetched.\r\n              This is because fetch is an async function.*/}\r\n          {appsOptions && appsOptions.map((option) => (\r\n            <label className=\"dropdown-item\" key={option}>\r\n              <input\r\n                type=\"checkbox\"\r\n                className='options-style'\r\n                checked={selectedOption === option}\r\n                onChange={() => toggleOption(option)}\r\n              />{\" \"}\r\n              {option}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      </Card>\r\n      {error != null && <label className='warning'>Error: {error}</label>}\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DynamicCheckbox;","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\StaticCheckbox.js",["179"],[],"import './StaticCheckbox.css';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nconst StaticCheckbox = (props) =>{\r\n\r\n    const [executionFlag, setExecutionFlag] = useState(false);\r\n\r\n    const handleCheckboxChange = (event) =>{\r\n        const id = event.target.id;\r\n\r\n        // If the clicked checkbox is already checked, uncheck it\r\n        if (id === executionFlag) {\r\n        setExecutionFlag(null);\r\n        } else {\r\n        setExecutionFlag(id); // Otherwise, check the clicked checkbox\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // This code will run after the state has been updated\r\n\r\n        if( props.refresh === true){\r\n            setExecutionFlag(false);\r\n        }\r\n        \r\n        const executionType={ \r\n          execType: executionFlag\r\n        };\r\n        props.onExecuteEvent(executionType);  \r\n        }, [props.refresh ,executionFlag]);\r\n\r\n    return(\r\n        <div>\r\n            <div className='checkbox-margin'>\r\n                <label  className='form-control'>\r\n                    <input\r\n                        id='simult'\r\n                        type='checkbox'\r\n                        checked= {executionFlag === 'simult'}\r\n                        onChange={handleCheckboxChange}\r\n                    />Simultaneous\r\n                </label> \r\n                <label className='form-control'>\r\n                    <input\r\n                        id='not-simult'\r\n                        type='checkbox'\r\n                        checked={executionFlag === 'not-simult'}\r\n                        onChange={handleCheckboxChange}\r\n                    />Not Simultaneous\r\n                </label> \r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default StaticCheckbox;","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\TextInput.js",["180","181","182","183","184"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\Card.js",[],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\Dropdown.js",["185","186","187","188","189","190"],[],"import React, { useState, useEffect } from 'react';\r\n\r\nimport './Dropdown.css';\r\n\r\nconst Dropdown = (props) => {\r\n\r\n    const [selectedNumber, setSelectedNumber] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [frequenciesOptions, setFrequenciesOptions] = useState('');\r\n    const [selectedFrequency, setSelectedFrequency] = useState('');\r\n\r\n    const handleSelectChange = (e) => {\r\n      setSelectedNumber(e.target.value);\r\n    };\r\n  \r\n    const numbers = Array.from({ length: 15 }, (_, i) => i + 1);\r\n\r\n\r\n    useEffect(() => {\r\n      if (props.injected === true) {\r\n        setError(null);\r\n        fetch(props.frequenciesURL, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'ngrok-skip-browser-warning': '1',\r\n          },\r\n        })\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            setFrequenciesOptions(data);\r\n          })\r\n          .catch((error) => {\r\n            setError(error.message);\r\n          });\r\n      }\r\n    }, [props.injected, props.frequenciesURL, props.frequenciesOptions]);\r\n\r\n    \r\n    useEffect(() => {\r\n      // This code will run after the state has been updated\r\n      if( props.refresh === true){\r\n        setSelectedNumber('');\r\n        setSelectedFrequency('');\r\n      }\r\n\r\n      if(props.injected== false){\r\n        const execNum={ \r\n          execNum: selectedNumber\r\n        };\r\n        props.onExecuteEvent(execNum); \r\n      }\r\n      \r\n      if(props.injected== true){\r\n        const freq={ \r\n          freq:selectedFrequency\r\n        };\r\n        props.onExecuteEvent(freq); \r\n      }\r\n\r\n      }, [props.refresh ,selectedFrequency,selectedNumber]);\r\n\r\n  \r\n    return (\r\n      <div>\r\n        {(props.injected == false) && (\r\n          <div>\r\n          <select className='select' onChange={handleSelectChange} value={selectedNumber}>\r\n            <option value=\"\">Select a number</option>\r\n            {numbers.map((number) => (\r\n              <option key={number} value={number}>\r\n                {number}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          </div>\r\n        )}\r\n\r\n        {(props.injected == true) && frequenciesOptions && (          \r\n            <div>\r\n            <select\r\n              className=\"select\"\r\n              onChange={(e) => setSelectedFrequency(e.target.value)}\r\n              value={selectedFrequency}\r\n            >\r\n              <option value=\"\">Select a frequency</option>\r\n              {frequenciesOptions.map((frequency) => (\r\n                <option key={frequency} value={frequency}>\r\n                  {frequency}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n        \r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dropdown;","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Apps\\AppComponent.js",["191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\PopUp.js",[],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\MainView\\MainView.js",["222","223","224","225"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Monitoring\\MonitoringView.js",["226","227","228","229","230","231","232"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Monitoring\\MyChart.js",["233","234","235","236"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Nuevo Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Monitoring\\ExecutionTime.js",[],[],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":4,"column":8,"nodeType":"241","messageId":"242","endLine":4,"endColumn":23},{"ruleId":"239","severity":1,"message":"243","line":8,"column":8,"nodeType":"241","messageId":"242","endLine":8,"endColumn":17},{"ruleId":"239","severity":1,"message":"244","line":12,"column":11,"nodeType":"241","messageId":"242","endLine":12,"endColumn":21},{"ruleId":"239","severity":1,"message":"245","line":14,"column":11,"nodeType":"241","messageId":"242","endLine":14,"endColumn":15},{"ruleId":"239","severity":1,"message":"246","line":17,"column":12,"nodeType":"241","messageId":"242","endLine":17,"endColumn":23},{"ruleId":"247","severity":1,"message":"248","line":25,"column":12,"nodeType":"249","endLine":25,"endColumn":27,"suggestions":"250"},{"ruleId":"247","severity":1,"message":"251","line":34,"column":6,"nodeType":"249","endLine":34,"endColumn":8,"suggestions":"252"},{"ruleId":"247","severity":1,"message":"248","line":52,"column":6,"nodeType":"249","endLine":52,"endColumn":22,"suggestions":"253"},{"ruleId":"239","severity":1,"message":"254","line":8,"column":12,"nodeType":"241","messageId":"242","endLine":8,"endColumn":17},{"ruleId":"255","severity":1,"message":"256","line":47,"column":24,"nodeType":"257","messageId":"258","endLine":47,"endColumn":26},{"ruleId":"255","severity":1,"message":"256","line":54,"column":24,"nodeType":"257","messageId":"258","endLine":54,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":61,"column":10,"nodeType":"249","endLine":61,"endColumn":44,"suggestions":"259"},{"ruleId":"255","severity":1,"message":"256","line":66,"column":26,"nodeType":"257","messageId":"258","endLine":66,"endColumn":28},{"ruleId":"255","severity":1,"message":"256","line":80,"column":26,"nodeType":"257","messageId":"258","endLine":80,"endColumn":28},{"ruleId":"239","severity":1,"message":"260","line":8,"column":12,"nodeType":"241","messageId":"242","endLine":8,"endColumn":26},{"ruleId":"255","severity":1,"message":"256","line":26,"column":21,"nodeType":"257","messageId":"258","endLine":26,"endColumn":23},{"ruleId":"255","severity":1,"message":"256","line":33,"column":21,"nodeType":"257","messageId":"258","endLine":33,"endColumn":23},{"ruleId":"255","severity":1,"message":"256","line":40,"column":26,"nodeType":"257","messageId":"258","endLine":40,"endColumn":28},{"ruleId":"247","severity":1,"message":"248","line":46,"column":10,"nodeType":"249","endLine":46,"endColumn":22,"suggestions":"261"},{"ruleId":"239","severity":1,"message":"262","line":7,"column":11,"nodeType":"241","messageId":"242","endLine":7,"endColumn":20},{"ruleId":"255","severity":1,"message":"256","line":31,"column":27,"nodeType":"257","messageId":"258","endLine":31,"endColumn":29},{"ruleId":"255","severity":1,"message":"256","line":37,"column":32,"nodeType":"257","messageId":"258","endLine":37,"endColumn":34},{"ruleId":"239","severity":1,"message":"263","line":46,"column":11,"nodeType":"241","messageId":"242","endLine":46,"endColumn":23},{"ruleId":"255","severity":1,"message":"256","line":59,"column":21,"nodeType":"257","messageId":"258","endLine":59,"endColumn":23},{"ruleId":"255","severity":1,"message":"256","line":67,"column":26,"nodeType":"257","messageId":"258","endLine":67,"endColumn":28},{"ruleId":"255","severity":1,"message":"256","line":75,"column":26,"nodeType":"257","messageId":"258","endLine":75,"endColumn":28},{"ruleId":"255","severity":1,"message":"256","line":83,"column":26,"nodeType":"257","messageId":"258","endLine":83,"endColumn":28},{"ruleId":"255","severity":1,"message":"256","line":91,"column":26,"nodeType":"257","messageId":"258","endLine":91,"endColumn":28},{"ruleId":"247","severity":1,"message":"248","line":99,"column":8,"nodeType":"249","endLine":99,"endColumn":110,"suggestions":"264"},{"ruleId":"255","severity":1,"message":"256","line":110,"column":39,"nodeType":"257","messageId":"258","endLine":110,"endColumn":41},{"ruleId":"255","severity":1,"message":"256","line":117,"column":39,"nodeType":"257","messageId":"258","endLine":117,"endColumn":41},{"ruleId":"255","severity":1,"message":"256","line":128,"column":38,"nodeType":"257","messageId":"258","endLine":128,"endColumn":40},{"ruleId":"255","severity":1,"message":"256","line":137,"column":38,"nodeType":"257","messageId":"258","endLine":137,"endColumn":40},{"ruleId":"255","severity":1,"message":"256","line":161,"column":38,"nodeType":"257","messageId":"258","endLine":161,"endColumn":40},{"ruleId":"255","severity":1,"message":"256","line":186,"column":38,"nodeType":"257","messageId":"258","endLine":186,"endColumn":40},{"ruleId":"237","replacedBy":"265"},{"ruleId":"237","replacedBy":"266"},{"ruleId":"247","severity":1,"message":"248","line":68,"column":8,"nodeType":"249","endLine":68,"endColumn":24,"suggestions":"267"},{"ruleId":"247","severity":1,"message":"251","line":34,"column":6,"nodeType":"249","endLine":34,"endColumn":8,"suggestions":"268"},{"ruleId":"255","severity":1,"message":"256","line":42,"column":22,"nodeType":"257","messageId":"258","endLine":42,"endColumn":24},{"ruleId":"247","severity":1,"message":"248","line":57,"column":6,"nodeType":"249","endLine":57,"endColumn":37,"suggestions":"269"},{"ruleId":"247","severity":1,"message":"248","line":30,"column":12,"nodeType":"249","endLine":30,"endColumn":42,"suggestions":"270"},{"ruleId":"239","severity":1,"message":"260","line":8,"column":12,"nodeType":"241","messageId":"242","endLine":8,"endColumn":26},{"ruleId":"255","severity":1,"message":"256","line":26,"column":21,"nodeType":"257","messageId":"258","endLine":26,"endColumn":23},{"ruleId":"255","severity":1,"message":"256","line":33,"column":21,"nodeType":"257","messageId":"258","endLine":33,"endColumn":23},{"ruleId":"255","severity":1,"message":"256","line":40,"column":26,"nodeType":"257","messageId":"258","endLine":40,"endColumn":28},{"ruleId":"247","severity":1,"message":"248","line":46,"column":10,"nodeType":"249","endLine":46,"endColumn":22,"suggestions":"271"},{"ruleId":"239","severity":1,"message":"254","line":8,"column":12,"nodeType":"241","messageId":"242","endLine":8,"endColumn":17},{"ruleId":"255","severity":1,"message":"256","line":52,"column":24,"nodeType":"257","messageId":"258","endLine":52,"endColumn":26},{"ruleId":"255","severity":1,"message":"256","line":59,"column":24,"nodeType":"257","messageId":"258","endLine":59,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":66,"column":10,"nodeType":"249","endLine":66,"endColumn":59,"suggestions":"272"},{"ruleId":"255","severity":1,"message":"256","line":71,"column":26,"nodeType":"257","messageId":"258","endLine":71,"endColumn":28},{"ruleId":"255","severity":1,"message":"256","line":85,"column":26,"nodeType":"257","messageId":"258","endLine":85,"endColumn":28},{"ruleId":"255","severity":1,"message":"256","line":34,"column":27,"nodeType":"257","messageId":"258","endLine":34,"endColumn":29},{"ruleId":"255","severity":1,"message":"256","line":40,"column":32,"nodeType":"257","messageId":"258","endLine":40,"endColumn":34},{"ruleId":"255","severity":1,"message":"256","line":60,"column":23,"nodeType":"257","messageId":"258","endLine":60,"endColumn":25},{"ruleId":"255","severity":1,"message":"256","line":80,"column":21,"nodeType":"257","messageId":"258","endLine":80,"endColumn":23},{"ruleId":"255","severity":1,"message":"273","line":85,"column":23,"nodeType":"257","messageId":"258","endLine":85,"endColumn":25},{"ruleId":"255","severity":1,"message":"256","line":88,"column":26,"nodeType":"257","messageId":"258","endLine":88,"endColumn":28},{"ruleId":"255","severity":1,"message":"273","line":94,"column":17,"nodeType":"257","messageId":"258","endLine":94,"endColumn":19},{"ruleId":"255","severity":1,"message":"256","line":97,"column":26,"nodeType":"257","messageId":"258","endLine":97,"endColumn":28},{"ruleId":"255","severity":1,"message":"273","line":102,"column":18,"nodeType":"257","messageId":"258","endLine":102,"endColumn":20},{"ruleId":"255","severity":1,"message":"273","line":102,"column":34,"nodeType":"257","messageId":"258","endLine":102,"endColumn":36},{"ruleId":"255","severity":1,"message":"273","line":102,"column":47,"nodeType":"257","messageId":"258","endLine":102,"endColumn":49},{"ruleId":"255","severity":1,"message":"273","line":102,"column":59,"nodeType":"257","messageId":"258","endLine":102,"endColumn":61},{"ruleId":"255","severity":1,"message":"256","line":105,"column":26,"nodeType":"257","messageId":"258","endLine":105,"endColumn":28},{"ruleId":"255","severity":1,"message":"273","line":110,"column":18,"nodeType":"257","messageId":"258","endLine":110,"endColumn":20},{"ruleId":"255","severity":1,"message":"273","line":110,"column":34,"nodeType":"257","messageId":"258","endLine":110,"endColumn":36},{"ruleId":"255","severity":1,"message":"273","line":110,"column":46,"nodeType":"257","messageId":"258","endLine":110,"endColumn":48},{"ruleId":"255","severity":1,"message":"273","line":110,"column":58,"nodeType":"257","messageId":"258","endLine":110,"endColumn":60},{"ruleId":"255","severity":1,"message":"256","line":113,"column":26,"nodeType":"257","messageId":"258","endLine":113,"endColumn":28},{"ruleId":"255","severity":1,"message":"273","line":119,"column":23,"nodeType":"257","messageId":"258","endLine":119,"endColumn":25},{"ruleId":"255","severity":1,"message":"273","line":119,"column":44,"nodeType":"257","messageId":"258","endLine":119,"endColumn":46},{"ruleId":"255","severity":1,"message":"256","line":122,"column":26,"nodeType":"257","messageId":"258","endLine":122,"endColumn":28},{"ruleId":"255","severity":1,"message":"273","line":129,"column":25,"nodeType":"257","messageId":"258","endLine":129,"endColumn":27},{"ruleId":"255","severity":1,"message":"273","line":129,"column":51,"nodeType":"257","messageId":"258","endLine":129,"endColumn":53},{"ruleId":"247","severity":1,"message":"274","line":131,"column":8,"nodeType":"249","endLine":132,"endColumn":73,"suggestions":"275"},{"ruleId":"255","severity":1,"message":"256","line":143,"column":39,"nodeType":"257","messageId":"258","endLine":143,"endColumn":41},{"ruleId":"255","severity":1,"message":"256","line":150,"column":39,"nodeType":"257","messageId":"258","endLine":150,"endColumn":41},{"ruleId":"255","severity":1,"message":"256","line":161,"column":38,"nodeType":"257","messageId":"258","endLine":161,"endColumn":40},{"ruleId":"255","severity":1,"message":"256","line":170,"column":38,"nodeType":"257","messageId":"258","endLine":170,"endColumn":40},{"ruleId":"255","severity":1,"message":"256","line":194,"column":38,"nodeType":"257","messageId":"258","endLine":194,"endColumn":40},{"ruleId":"255","severity":1,"message":"256","line":221,"column":38,"nodeType":"257","messageId":"258","endLine":221,"endColumn":40},{"ruleId":"255","severity":1,"message":"256","line":235,"column":38,"nodeType":"257","messageId":"258","endLine":235,"endColumn":40},{"ruleId":"255","severity":1,"message":"256","line":29,"column":31,"nodeType":"257","messageId":"258","endLine":29,"endColumn":33},{"ruleId":"255","severity":1,"message":"256","line":30,"column":36,"nodeType":"257","messageId":"258","endLine":30,"endColumn":38},{"ruleId":"255","severity":1,"message":"256","line":39,"column":28,"nodeType":"257","messageId":"258","endLine":39,"endColumn":30},{"ruleId":"255","severity":1,"message":"256","line":48,"column":28,"nodeType":"257","messageId":"258","endLine":48,"endColumn":30},{"ruleId":"239","severity":1,"message":"276","line":4,"column":8,"nodeType":"241","messageId":"242","endLine":4,"endColumn":21},{"ruleId":"239","severity":1,"message":"254","line":9,"column":12,"nodeType":"241","messageId":"242","endLine":9,"endColumn":17},{"ruleId":"239","severity":1,"message":"277","line":11,"column":12,"nodeType":"241","messageId":"242","endLine":11,"endColumn":19},{"ruleId":"239","severity":1,"message":"278","line":13,"column":12,"nodeType":"241","messageId":"242","endLine":13,"endColumn":20},{"ruleId":"255","severity":1,"message":"273","line":70,"column":19,"nodeType":"257","messageId":"258","endLine":70,"endColumn":21},{"ruleId":"255","severity":1,"message":"273","line":81,"column":30,"nodeType":"257","messageId":"258","endLine":81,"endColumn":32},{"ruleId":"247","severity":1,"message":"279","line":113,"column":8,"nodeType":"249","endLine":113,"endColumn":78,"suggestions":"280"},{"ruleId":"255","severity":1,"message":"256","line":40,"column":22,"nodeType":"257","messageId":"258","endLine":40,"endColumn":24},{"ruleId":"255","severity":1,"message":"256","line":46,"column":22,"nodeType":"257","messageId":"258","endLine":46,"endColumn":24},{"ruleId":"255","severity":1,"message":"256","line":52,"column":22,"nodeType":"257","messageId":"258","endLine":52,"endColumn":24},{"ruleId":"281","severity":1,"message":"282","line":115,"column":11,"nodeType":"283","endLine":115,"endColumn":73},"no-new-object",["284"],"no-unused-vars","'DynamicCheckbox' is defined but never used.","Identifier","unusedVar","'TextInput' is defined but never used.","'freqString' is assigned a value but never used.","'freq' is assigned a value but never used.","'refreshFlag' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["285"],"React Hook useEffect has a missing dependency: 'props.itemsURL'. Either include it or remove the dependency array.",["286"],["287"],"'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["288"],"'selectedNumber' is assigned a value but never used.",["289"],"'workloads' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["290"],["284"],["284"],["291"],["292"],["293"],["294"],["295"],["296"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'make_input', 'make_isChecked', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["297"],"'ExecutionTime' is defined but never used.","'gpuTemp' is assigned a value but never used.","'gpuPower' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetch_GPUData'. Either include it or remove the dependency array.",["298"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-object-constructor",{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"301","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"307","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},"Update the dependencies array to be: [executionFlag, props]",{"range":"325","text":"326"},"Update the dependencies array to be: [props.itemsURL]",{"range":"327","text":"328"},"Update the dependencies array to be: [props, selectedOption]",{"range":"329","text":"330"},"Update the dependencies array to be: [props, selectedFrequency, selectedNumber]",{"range":"331","text":"332"},"Update the dependencies array to be: [inputValue, props]",{"range":"333","text":"334"},"Update the dependencies array to be: [userData, cfd_threads, niter, lambda, nc, nr, width, height, nfr, np, matrixSize, lud_threads, boxes, props]",{"range":"335","text":"336"},"Update the dependencies array to be: [MonitoringFlag, props]",{"range":"337","text":"338"},{"range":"339","text":"328"},"Update the dependencies array to be: [props, props.refresh, selectedOption]",{"range":"340","text":"341"},"Update the dependencies array to be: [props.refresh, executionFlag, props]",{"range":"342","text":"343"},{"range":"344","text":"334"},"Update the dependencies array to be: [props, props.refresh, selectedFrequency, selectedNumber]",{"range":"345","text":"346"},"Update the dependencies array to be: [props.refresh, userData, cfd_threads, niter, lambda, nc, nr, width, height, nfr, np, matrixSize, lud_threads, boxes, externalName, externalWorkload, props, make_isChecked, make_input]",{"range":"347","text":"348"},"Update the dependencies array to be: [props.currentAppsURL, currentApps, props.getExecState, props.gpuData, fetch_GPUData]",{"range":"349","text":"350"},[746,761],"[executionFlag, props]",[981,983],"[props.itemsURL]",[1623,1639],"[props, selectedOption]",[1708,1742],"[props, selectedFrequency, selectedNumber]",[1203,1215],"[inputValue, props]",[3020,3122],"[userData, cfd_threads, niter, lambda, nc, nr, width, height, nfr, np, matrixSize, lud_threads, boxes, props]",[2016,2032],"[MonitoringFlag, props]",[981,983],[1702,1733],"[props, props.refresh, selectedOption]",[845,875],"[props.refresh, executionFlag, props]",[1203,1215],[1822,1871],"[props, props.refresh, selectedFrequency, selectedNumber]",[4219,4378],"[props.refresh, userData, cfd_threads, niter, lambda, nc, nr, width, height, nfr, np, matrixSize, lud_threads, boxes, externalName, externalWorkload, props, make_isChecked, make_input]",[3873,3943],"[props.currentAppsURL, currentApps, props.getExecState, props.gpuData, fetch_GPUData]"]