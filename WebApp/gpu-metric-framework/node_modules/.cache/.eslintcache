[{"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\index.js":"1","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\App.js":"2","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\Card.js":"3","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\ExecutionView.js":"4","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\Navbar.js":"5","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\StaticCheckbox.js":"6","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\DynamicCheckbox.js":"7","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\Dropdown.js":"8","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\TextInput.js":"9","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Apps\\AppComponent.js":"10"},{"size":216,"mtime":1695751156443,"results":"11","hashOfConfig":"12"},{"size":619,"mtime":1698217508886,"results":"13","hashOfConfig":"12"},{"size":187,"mtime":1695751156438,"results":"14","hashOfConfig":"12"},{"size":4099,"mtime":1698217796761,"results":"15","hashOfConfig":"12"},{"size":264,"mtime":1698200175697,"results":"16","hashOfConfig":"12"},{"size":1621,"mtime":1695794812252,"results":"17","hashOfConfig":"12"},{"size":2873,"mtime":1698217616423,"results":"18","hashOfConfig":"12"},{"size":967,"mtime":1698218114412,"results":"19","hashOfConfig":"12"},{"size":1569,"mtime":1698217997513,"results":"20","hashOfConfig":"12"},{"size":7101,"mtime":1698217720803,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f1td20",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\index.js",[],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\App.js",[],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\Card.js",[],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\ExecutionView.js",["55","56"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\UI\\Navbar.js",[],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\StaticCheckbox.js",["57"],[],"import './StaticCheckbox.css';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nconst StaticCheckbox = (props) =>{\r\n\r\n    const [executionFlag, setExecutionFlag] = useState(false);\r\n\r\n    const handleCheckboxChange = (event) =>{\r\n        const id = event.target.id;\r\n\r\n        // If the clicked checkbox is already checked, uncheck it\r\n        if (id === executionFlag) {\r\n        setExecutionFlag(null);\r\n        } else {\r\n        setExecutionFlag(id); // Otherwise, check the clicked checkbox\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // This code will run after the state has been updated\r\n        const executionType={ \r\n          execType: executionFlag\r\n        };\r\n        props.onExecuteEvent(executionType);  \r\n        }, [executionFlag]);\r\n\r\n    return(\r\n        <div>\r\n            <div className='checkbox-margin'>\r\n                <label  className='form-control'>\r\n                    <input\r\n                        id='simult'\r\n                        type='checkbox'\r\n                        checked= {executionFlag === 'simult'}\r\n                        onChange={handleCheckboxChange}\r\n                    />Simultaneous\r\n                </label> \r\n                <label className='form-control'>\r\n                    <input\r\n                        id='not-simult'\r\n                        type='checkbox'\r\n                        checked={executionFlag === 'not-simult'}\r\n                        onChange={handleCheckboxChange}\r\n                    />Not Simultaneous\r\n                </label> \r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default StaticCheckbox;","C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\DynamicCheckbox.js",["58","59"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\Dropdown.js",["60"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Request-Execution\\TextInput.js",["61","62","63","64","65"],[],"C:\\Users\\Lenovo P1\\OneDrive\\Documentos\\TEC\\Proyecto de diseño\\Repo\\jetson-gpu-benchmarking\\WebApp\\gpu-metric-framework\\src\\components\\Apps\\AppComponent.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81"],[],"import React, { useState, useEffect  } from 'react';\r\nimport DynamicCheckbox from '../Request-Execution/DynamicCheckbox';\r\nimport './AppComponents.css';\r\n\r\nconst AppComponent = (props) => {\r\n  \r\n    const workloads = 'workloads';\r\n    let userData={}\r\n\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    //Constants to save inputs values\r\n    const [cfd_threads, set_cfd_Threads] = useState('');\r\n    const [niter, setNiter] = useState('');\r\n    const [lambda, setLambda] = useState('');\r\n    const [nc, setNc] = useState('');\r\n    const [nr, setNr] = useState('');\r\n    const [width, setWidth] = useState('');\r\n    const [height, setHeight] = useState('');\r\n    const [nfr, setNfr] = useState('');\r\n    const [np, setNp] = useState('');\r\n    const [matrixSize, setMatrixSize] = useState('');\r\n    const [lud_threads, set_lud_threads] = useState('');\r\n    const [boxes, setBoxes] = useState('');\r\n\r\n    const executeHandler = ( enteredUserData ) => {\r\n        userData = {\r\n            ...userData, // Keep the existing data in userData\r\n            ...enteredUserData, // Add the data from enteredUserData\r\n        };\r\n        if (props.appName == 'CFD'){\r\n            const cfdApp={\r\n                cfd_workloads : userData.cfd_workload\r\n            }\r\n            props.onExecuteEvent(cfdApp);\r\n        }\r\n        else if (props.appName == 'BFS'){\r\n            const bfs = {\r\n                bfs_name:'BFS',\r\n                bfs_workloads : userData.bfs_workload\r\n            }\r\n            props.onExecuteEvent(bfs);\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        props.updateData(event.target.value);\r\n    }\r\n\r\n    const handleCheckboxChange = () => {\r\n        setIsChecked(prevState => !prevState); // Invierte el valor de isChecked\r\n    };\r\n\r\n    //Sending data the the parent\r\n    useEffect(() => {\r\n    // This code will run after the state has been updated\r\n\r\n\r\n    if(props.appName=='CFD'){\r\n        const cfd={ \r\n        cfd_name: 'CFD',\r\n        cfd_threads: cfd_threads\r\n        };\r\n        props.onExecuteEvent(cfd); \r\n    }\r\n\r\n    else if(props.appName=='LavaMD'){\r\n        const lavaMD={ \r\n        lava_name: 'LavaMD',\r\n        lava_workloads:' -boxes1d '+ boxes\r\n        };\r\n        props.onExecuteEvent(lavaMD); \r\n    }\r\n\r\n    else if(props.appName=='Particle Filter'){\r\n        const particle={ \r\n        filter_name: 'Particle Filter',\r\n        filter_workloads: ' -x ' + width + ' -y ' + height + ' -z ' + nfr + ' -np ' + np\r\n        };\r\n        props.onExecuteEvent(particle); \r\n    }\r\n\r\n    else if(props.appName=='Srad'){\r\n        const srad={ \r\n        srad_name: 'Srad',\r\n        srad_workloads: String(niter) + ' ' + String(lambda) + ' ' +  String(nr)+ ' ' + String(nc)\r\n        };\r\n        props.onExecuteEvent(srad); \r\n    }\r\n\r\n    else if(props.appName=='Lud'){\r\n        const lud={ \r\n        lud_name: 'Lud',\r\n        lud_workloads: ' -s ' + matrixSize ,\r\n        lud_threads: lud_threads\r\n        };\r\n        props.onExecuteEvent(lud); \r\n    } \r\n    }, [userData, cfd_threads, niter, lambda, nc, nr, width, height, nfr, np, matrixSize, lud_threads, boxes]);\r\n    \r\n\r\n\r\n  return (\r\n    <div className='app-style'>\r\n        <label>\r\n      <input type=\"checkbox\" onChange={handleCheckboxChange}/>{props.appName}\r\n      </label>\r\n      <div className='text-style'>\r\n        \r\n        { isChecked && (props.appName == 'BFS') && (\r\n            <>\r\n            <label>Workloads files:</label>\r\n            <DynamicCheckbox itemsURL={props.itemsURL} appName={'BFS'} onExecuteEvent = {executeHandler}/>\r\n            </>\r\n        )}\r\n\r\n        { isChecked && (props.appName == 'CFD') && (\r\n        <>\r\n            <label>Workloads files:</label>\r\n            <DynamicCheckbox itemsURL={props.itemsURL} appName={'CFD'} onExecuteEvent = {executeHandler}/>\r\n            <div >\r\n                <label>Threads per block</label>\r\n                <input type='number' className='input-style' value={cfd_threads} onChange={e => set_cfd_Threads(e.target.value)}></input>\r\n            </div>\r\n        </>\r\n        )}\r\n\r\n        {isChecked && (props.appName == 'LavaMD') && (\r\n        <>\r\n            <div>\r\n                <label>Number of boxes</label>\r\n                <input type='number' className='input-style' value={boxes} onChange={e => setBoxes(e.target.value)}></input>\r\n            </div>\r\n        </>\r\n        )}\r\n\r\n        {isChecked && (props.appName == 'Particle Filter') && (\r\n            <>\r\n                <div>\r\n                    <label>Width</label>\r\n                    <input type='number' className='input-style' value={width} onChange={e => setWidth(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Height</label>\r\n                    <input type='number' className='input-style' value={height} onChange={e => setHeight(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Number of frames</label>\r\n                    <input type='number' className='input-style' value={nfr} onChange={e => setNfr(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Number of particles</label>\r\n                    <input type='number' className='input-style' value={np} onChange={e => setNp(e.target.value)}></input>\r\n                </div>\r\n            </>\r\n        )}\r\n\r\n        {isChecked && (props.appName == 'Srad') && (\r\n            <>\r\n                <div>\r\n                    <label>Algorithm iterations in the image</label>\r\n                    <input type='number' className='input-style' value={niter} onChange={e => setNiter(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Amount of diffusion</label>\r\n                    <input type='number' step=\"0.01\" className='input-style' value={lambda} onChange={e => setLambda(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Number of rows</label>\r\n                    <input type='number' className='input-style' value={nr} onChange={e => setNr(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Number of columns</label>\r\n                    <input type='number' className='input-style' value={nc} onChange={e => setNc(e.target.value)}></input>\r\n                </div>\r\n            </>\r\n        )}\r\n\r\n\r\n        {isChecked && (props.appName == 'Lud') && (\r\n            <>\r\n                <div>\r\n                    <label>Matrix size</label>\r\n                    <input type='number' className='input-style' value={matrixSize} onChange={e => setMatrixSize(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Threads per block</label>\r\n                    <input type='number' className='input-style' value={lud_threads} onChange={e => set_lud_threads(e.target.value)}></input>\r\n                </div>\r\n            </>\r\n        )}\r\n      </div>\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppComponent;\r\n",["82"],{"ruleId":"83","severity":1,"message":"84","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":23},{"ruleId":"83","severity":1,"message":"87","line":17,"column":12,"nodeType":"85","messageId":"86","endLine":17,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":25,"column":12,"nodeType":"90","endLine":25,"endColumn":27,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"92","line":34,"column":6,"nodeType":"90","endLine":34,"endColumn":8,"suggestions":"93"},{"ruleId":"88","severity":1,"message":"89","line":52,"column":6,"nodeType":"90","endLine":52,"endColumn":22,"suggestions":"94"},{"ruleId":"88","severity":1,"message":"89","line":22,"column":10,"nodeType":"90","endLine":22,"endColumn":26,"suggestions":"95"},{"ruleId":"83","severity":1,"message":"96","line":8,"column":12,"nodeType":"85","messageId":"86","endLine":8,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":26,"column":21,"nodeType":"99","messageId":"100","endLine":26,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":33,"column":21,"nodeType":"99","messageId":"100","endLine":33,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":40,"column":26,"nodeType":"99","messageId":"100","endLine":40,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":46,"column":10,"nodeType":"90","endLine":46,"endColumn":22,"suggestions":"101"},{"ruleId":"83","severity":1,"message":"102","line":7,"column":11,"nodeType":"85","messageId":"86","endLine":7,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":31,"column":27,"nodeType":"99","messageId":"100","endLine":31,"endColumn":29},{"ruleId":"97","severity":1,"message":"98","line":37,"column":32,"nodeType":"99","messageId":"100","endLine":37,"endColumn":34},{"ruleId":"83","severity":1,"message":"103","line":46,"column":11,"nodeType":"85","messageId":"86","endLine":46,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":59,"column":21,"nodeType":"99","messageId":"100","endLine":59,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":67,"column":26,"nodeType":"99","messageId":"100","endLine":67,"endColumn":28},{"ruleId":"97","severity":1,"message":"98","line":75,"column":26,"nodeType":"99","messageId":"100","endLine":75,"endColumn":28},{"ruleId":"97","severity":1,"message":"98","line":83,"column":26,"nodeType":"99","messageId":"100","endLine":83,"endColumn":28},{"ruleId":"97","severity":1,"message":"98","line":91,"column":26,"nodeType":"99","messageId":"100","endLine":91,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":99,"column":8,"nodeType":"90","endLine":99,"endColumn":110,"suggestions":"104"},{"ruleId":"97","severity":1,"message":"98","line":110,"column":39,"nodeType":"99","messageId":"100","endLine":110,"endColumn":41},{"ruleId":"97","severity":1,"message":"98","line":117,"column":39,"nodeType":"99","messageId":"100","endLine":117,"endColumn":41},{"ruleId":"97","severity":1,"message":"98","line":128,"column":38,"nodeType":"99","messageId":"100","endLine":128,"endColumn":40},{"ruleId":"97","severity":1,"message":"98","line":137,"column":38,"nodeType":"99","messageId":"100","endLine":137,"endColumn":40},{"ruleId":"97","severity":1,"message":"98","line":161,"column":38,"nodeType":"99","messageId":"100","endLine":161,"endColumn":40},{"ruleId":"97","severity":1,"message":"98","line":186,"column":38,"nodeType":"99","messageId":"100","endLine":186,"endColumn":40},{"ruleId":"105","replacedBy":"106"},"no-unused-vars","'DynamicCheckbox' is defined but never used.","Identifier","unusedVar","'refreshFlag' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["107"],"React Hook useEffect has a missing dependency: 'props.itemsURL'. Either include it or remove the dependency array.",["108"],["109"],["110"],"'selectedNumber' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["111"],"'workloads' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["112"],"no-new-object",["113"],{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"no-object-constructor","Update the dependencies array to be: [executionFlag, props]",{"range":"126","text":"127"},"Update the dependencies array to be: [props.itemsURL]",{"range":"128","text":"129"},"Update the dependencies array to be: [props, selectedOption]",{"range":"130","text":"131"},"Update the dependencies array to be: [props, selectedNumber]",{"range":"132","text":"133"},"Update the dependencies array to be: [inputValue, props]",{"range":"134","text":"135"},"Update the dependencies array to be: [userData, cfd_threads, niter, lambda, nc, nr, width, height, nfr, np, matrixSize, lud_threads, boxes, props]",{"range":"136","text":"137"},[746,761],"[executionFlag, props]",[981,983],"[props.itemsURL]",[1623,1639],"[props, selectedOption]",[551,567],"[props, selectedNumber]",[1203,1215],"[inputValue, props]",[3020,3122],"[userData, cfd_threads, niter, lambda, nc, nr, width, height, nfr, np, matrixSize, lud_threads, boxes, props]"]